name: Linting

on:
  - push

jobs:
  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8"]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - uses: actions/cache@v2
        id: cache-venv
        with:
          path: ./.venv/
          key: ${{ runner.os }}-venv-${{ hashFiles('**/Pipfile') }}
          restore-keys: |
            ${{ runner.os }}-venv-
      - name: Install venv manager
        run: |
          python -m pip install --upgrade pip
          pip install pipenv
      - name: Install dependencies
        run: |
          mkdir .venv
          PIPENV_VENV_IN_PROJECT=1 pipenv install --dev --skip-lock
        if: steps.cache-venv.outputs.cache-hit != 'true'
      - name: Analysing the code with pylint
        run: |
          pipenv run pylint --fail-under=7 src
