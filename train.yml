name: Train

on:
  push:
    branches: [main]
    # Publish semver tags as releases.
    tags: ["v*.*.*"]

jobs:
  train:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8"]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - uses: actions/cache@v2
        id: cache-venv
        with:
          path: ./.venv/
          key: ${{ runner.os }}-venv-${{ hashFiles('**/Pipfile') }}
          restore-keys: |
            ${{ runner.os }}-venv-
      - name: Set up DVC
        uses: iterative/setup-dvc@v1

      - name: Pull data
        run: |
          export GDRIVE_CREDENTIALS_DATA='${{ secrets.GDRIVE_CREDENTIALS_DATA }}'
          dvc pull
      - name: Install venv manager
        run: |
          python -m pip install --upgrade pip
          pip install pipenv
      - name: Install dependencies
        run: |
          mkdir .venv
          PIPENV_VENV_IN_PROJECT=1 pipenv install --dev --skip-lock
        if: steps.cache-venv.outputs.cache-hit != 'true'
      - name: Check raw data
        run: |
          great_expectations --v3-api checkpoint run clinical-data
      - name: Run pipeline
        run: |
          pipenv run dvc repro
      - name: Check final data
        run: |
          great_expectations --v3-api checkpoint run labelled-images
          great_expectations --v3-api checkpoint run labels
          great_expectations --v3-api checkpoint run pup
      - name: Push results
        run: |
          dvc push
